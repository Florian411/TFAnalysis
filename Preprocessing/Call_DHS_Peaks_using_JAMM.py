import os
import subprocess
import sys
import argparse

#This script runs JAMM on the DNase files contained in the input folders which must be subfolders of the specified input folder.
#For example, the specified folder is DNase_Beds. In this folder, the Bed files must be sorted into individual subfolders, e.g. DNase_Beds/HepG2_R1, DNase_Beds/HepG2_R2 and so on.
#This is a requirement by the peak caller. Please put this script in the JAMM folder or make sure that JAMM.sh is in your path.
#
#Arguments:
#arg1: Path to the subfolders containing the DHS Bed files generated by the Convert_Bam_To_Bed command from the bam files provided at Synapse
#arg2: Path to write the called peak files to
#arg3: Path to the chromosome size file. A suitable file is included in the repository of our submission.
#arg4: Number of cores that should be used, default 4

def main():
	parser=argparse.ArgumentParser(prog="Call_DHS_Peaks_using_JAMM.py")                                                                                                               
	parser.add_argument("source",nargs=1,help="Path to the subfolders containing the DNase bed files")
	parser.add_argument("destination",nargs=1,help="Path to write the called  peaks to")
	parser.add_argument("sizeFile",nargs=1,help="Path to the chromosome size file as requested by JAMM")
	parser.add_argument("cores",nargs="?",help="Number of course to be used",default=4,type=int)
	args=parser.parse_args() 

	command="mkdir "+str(args.destination[0])
	subprocess.call(command,shell=True)
	
	DNase_BAM=os.listdir(args.source[0])
	for f in DNase_BAM:
		print "Calling peaks in "+f
		command="bash JAMM.sh -s "+args.source[0]+f+" -o  "+args.destination[0]+f+" -g "+args.sizeFile[0]+" -f 1 -p "+str(args.cores)
		output=subprocess.check_output(command,shell=True)


main()
